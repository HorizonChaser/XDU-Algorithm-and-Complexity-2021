// Using online simulator from
// https://turingmachinesimulator.com/

// Algorithm:
//    0. add delimiters '#' on the both sides of the input
//    1. do a scan from left # to right #, and overwrite any 'a' to '0', then go back to left
//    2. find the first symbol X that not equals to '0', then overwite it to '0', 
//        go to the leftmost '0', overwrite it to X, then repeat 2 until reach the right #
//    3. delete the leftmost #
//    4. move to the rightmost #, and go back to the left side while deleting any # along the way,
//        until reach 'b' or 'c', then halt

// Test Cases:
//    [1]  abcaacca    =>    bccc
//    [2]  bcaa    =>    bc

// Known Issues:
//    1. for input merely consists of 'a', although the output is empty as expected, but the machine cannot stop itself


name: Erase symbol “a” within a word in alphabet {a,b,c}
init: start0
accept: halt

start0, a
start0, a, >

start0, b
start0, b, >

start0, c
start0, c, >

start0, _
start1, #, <

start1, a
start1, a, <

start1, b
start1, b, <

start1, c
start1, c, <

start1, _
start, #, -

start, #
rpa, #, >

rpa, a
rpa, 0, >

rpa, b
rpa, b, >

rpa, c
rpa, c, >

rpa, #
ml, #, <

ml, b
ml, b, <

ml, c
ml, c, <

ml, 0
ml, 0, <

ml, #
mrbc, #, >

mrbc, 0
mrbc, 0, >

mrbc, b
gotb, 0, <

gotb, b
gotb, b, <

gotb, c
gotb, c, <

gotb, 0
gotb, 0, <

gotb, #
mrb, #, >

mrb, b
mrb, b, >

mrb, c
mrb, c, >

mrb, 0
mrbc, b, >

mrbc, c
gotc, 0, <

gotc, c
gotc, c, <

gotc, b
gotc, b, <

gotc, 0
gotc, 0, <

gotc, #
mrc, #, >

mrc, c
mrc, c, >

mrc, b
mrc, b, >

mrc, 0
mrbc, c, >

mrbc, #
fini, #, <

fini, b
fini, b, <

fini, c
fini, c, <

fini, 0
fini, #, <

fini, #
halt0, _, >

halt0, a
halt0, a, >

halt0, b
halt0, b, >

halt0, c
halt0, c, >

halt0, #
halt0, _, >

halt0, _
halt1, _, <

halt1, _
halt1, _, <

halt1, b
halt, b, -

halt1, c
halt, c, -